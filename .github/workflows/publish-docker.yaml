env:
  SKIP_TEST: true
jobs:
  build:
    if: github.repository == 'apache/skywalking'
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: true
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Set environment variables
      run: "if [[ ${{ github.event_name }} == \"release\" ]]; then\n  echo \"HUB=apache\"\
        \ >> $GITHUB_ENV\n  echo \"DOCKER_REGISTRY=docker.io\" >> $GITHUB_ENV\n  echo\
        \ \"DOCKER_USERNAME=${{ secrets.DOCKERHUB_USER }}\" >> $GITHUB_ENV\n  echo\
        \ \"DOCKER_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }}\" >> $GITHUB_ENV\n  echo\
        \ \"OAP_NAME=skywalking-oap-server\" >> $GITHUB_ENV\n  echo \"UI_NAME=skywalking-ui\"\
        \ >> $GITHUB_ENV\n  TAG=${{ github.event.release.tag_name }}\n  echo \"TAG=${TAG#v}\"\
        \ >> $GITHUB_ENV\nelse\n  echo \"HUB=ghcr.io/apache/skywalking\" >> $GITHUB_ENV\n\
        \  echo \"DOCKER_REGISTRY=ghcr.io/apache/skywalking\" >> $GITHUB_ENV\n  echo\
        \ \"DOCKER_USERNAME=${{ github.actor }}\" >> $GITHUB_ENV\n  echo \"DOCKER_PASSWORD=${{\
        \ secrets.GITHUB_TOKEN }}\" >> $GITHUB_ENV\n  echo \"TAG=${{ github.sha }}\"\
        \ >> $GITHUB_ENV\nfi\n"
    - continue-on-error: true
      name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        password: ${{ env.DOCKER_PASSWORD }}
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - continue-on-error: true
      env:
        SW_OAP_BASE_IMAGE: eclipse-temurin:17-jre
        TAG: ${{ env.TAG }}-java17
      name: Build and push docker images based on Java 17
      run: make build.all docker.push
    - continue-on-error: true
      env:
        SW_OAP_BASE_IMAGE: eclipse-temurin:21-jre
        TAG: ${{ env.TAG }}-java21
      name: Build and push docker images based on Java 21
      run: make build.all docker.push
    - continue-on-error: true
      name: Build and push docker images
      run: make build.all docker.push
    timeout-minutes: 90
name: publish-docker
on:
  repository_dispatch:
    types: trigger-ga___publish-docker.yaml
